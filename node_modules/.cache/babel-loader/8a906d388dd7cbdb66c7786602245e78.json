{"ast":null,"code":"import data from \"../Constants/data.json\";\nconst initialState = {\n  products: data,\n  cartList: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"ADD TO CART\":\n      {\n        let list = JSON.parse(JSON.stringify(state.products));\n        let index = state.cartList.findIndex(x => x.id === list[action.index].id);\n        let cartArr = state.cartList;\n\n        if (index > -1) {\n          list[action.index][\"quanitity\"]++;\n          cartArr[index][\"quanitity\"]++;\n          cartArr[index][\"updatedRate\"] = cartArr[index][\"quanitity\"] * cartArr[index][\"rate\"];\n        } else {\n          list[action.index][\"quanitity\"]++;\n          cartArr[index][\"updatedRate\"] = list[action.index][\"rate\"];\n          cartArr.push(list[action.index]);\n        }\n\n        state.products = list;\n        state.cartList = cartArr;\n        let total = state.cartList.reduce((accum, item) => accum + item.updatedRate, 0);\n        console.log(total);\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ios11/Desktop/untitled folder/my-demo/src/Redux/reducer.js"],"names":["data","initialState","products","cartList","state","action","type","list","JSON","parse","stringify","index","findIndex","x","id","cartArr","push","total","reduce","accum","item","updatedRate","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEF,IADS;AAEnBG,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAK,CAACF,QAArB,CAAX,CAAX;AAGA,YAAIS,KAAK,GAAGP,KAAK,CAACD,QAAN,CAAeS,SAAf,CAAyBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASP,IAAI,CAACF,MAAM,CAACM,KAAR,CAAJ,CAAmBG,EAA1D,CAAZ;AACA,YAAIC,OAAO,GAAIX,KAAK,CAACD,QAArB;;AACA,YAAIQ,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdJ,UAAAA,IAAI,CAACF,MAAM,CAACM,KAAR,CAAJ,CAAmB,WAAnB;AACAI,UAAAA,OAAO,CAACJ,KAAD,CAAP,CAAe,WAAf;AACAI,UAAAA,OAAO,CAACJ,KAAD,CAAP,CAAe,aAAf,IAAiCI,OAAO,CAACJ,KAAD,CAAP,CAAe,WAAf,IAA8BI,OAAO,CAACJ,KAAD,CAAP,CAAe,MAAf,CAA/D;AACD,SAJD,MAIO;AACLJ,UAAAA,IAAI,CAACF,MAAM,CAACM,KAAR,CAAJ,CAAmB,WAAnB;AACAI,UAAAA,OAAO,CAACJ,KAAD,CAAP,CAAe,aAAf,IAAgCJ,IAAI,CAACF,MAAM,CAACM,KAAR,CAAJ,CAAmB,MAAnB,CAAhC;AACAI,UAAAA,OAAO,CAACC,IAAR,CAAaT,IAAI,CAACF,MAAM,CAACM,KAAR,CAAjB;AACD;;AACDP,QAAAA,KAAK,CAACF,QAAN,GAAiBK,IAAjB;AACAH,QAAAA,KAAK,CAACD,QAAN,GAAiBY,OAAjB;AACA,YAAIE,KAAK,GAAGb,KAAK,CAACD,QAAN,CAAee,MAAf,CAAsB,CAACC,KAAD,EAAOC,IAAP,KAAgBD,KAAK,GAAGC,IAAI,CAACC,WAAnD,EAAgE,CAAhE,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,eAAO,EACL,GAAGb;AADE,SAAP;AAGD;;AAED;AACE,aAAOA,KAAP;AA1BJ;AA4BD","sourcesContent":["import data from \"../Constants/data.json\"\n\nconst initialState = {\n  products: data,\n  cartList: []\n};\n\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"ADD TO CART\": {\n      let list = JSON.parse(JSON.stringify(state.products))\n      \n   \n      let index = state.cartList.findIndex(x => x.id === list[action.index].id)\n      let cartArr =  state.cartList\n      if (index > -1) {\n        list[action.index][\"quanitity\"]++\n        cartArr[index][\"quanitity\"]++\n        cartArr[index][\"updatedRate\"] = (cartArr[index][\"quanitity\"] * cartArr[index][\"rate\"])\n      } else {\n        list[action.index][\"quanitity\"]++\n        cartArr[index][\"updatedRate\"] = list[action.index][\"rate\"]\n        cartArr.push(list[action.index])\n      }\n      state.products = list\n      state.cartList = cartArr\n      let total = state.cartList.reduce((accum,item) => accum + item.updatedRate, 0)\n      console.log(total)\n      return {\n        ...state,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}