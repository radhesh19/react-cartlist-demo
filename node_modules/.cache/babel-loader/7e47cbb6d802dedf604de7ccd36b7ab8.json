{"ast":null,"code":"import data from \"../Constants/data.json\";\nconst initialState = {\n  products: data,\n  cartList: []\n};\n\nfunction checkCartItem(cartdata, selectedItem, productList) {\n  let index = cartdata.findIndex(x => x.id === selectedItem);\n\n  if (index > -1) {}\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"ADD TO CART\":\n      {\n        let list = JSON.parse(JSON.stringify(state.products));\n        console.log(action, list);\n        let updatedCart = checkCartItem(state.cartList, list[action.index].id, list);\n        list[action.index][\"quanitity\"]++;\n        state.products = list;\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ios11/Desktop/untitled folder/my-demo/src/Redux/reducer.js"],"names":["data","initialState","products","cartList","checkCartItem","cartdata","selectedItem","productList","index","findIndex","x","id","state","action","type","list","JSON","parse","stringify","console","log","updatedCart"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEF,IADS;AAEnBG,EAAAA,QAAQ,EAAC;AAFU,CAArB;;AAMA,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,YAAjC,EAA+CC,WAA/C,EAA2D;AACzD,MAAIC,KAAK,GAAGH,QAAQ,CAACI,SAAT,CAAmBC,CAAC,IAAEA,CAAC,CAACC,EAAF,KAASL,YAA/B,CAAZ;;AACA,MAAGE,KAAK,GAAG,CAAC,CAAZ,EAAc,CAEb;AACF;;AAGD,eAAe,UAASI,KAAK,GAAGX,YAAjB,EAA+BY,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAK,CAACV,QAArB,CAAX,CAAX;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ,EAAoBE,IAApB;AACA,YAAIM,WAAW,GAAGjB,aAAa,CAACQ,KAAK,CAACT,QAAP,EAAiBY,IAAI,CAACF,MAAM,CAACL,KAAR,CAAJ,CAAmBG,EAApC,EAAwCI,IAAxC,CAA/B;AAGAA,QAAAA,IAAI,CAACF,MAAM,CAACL,KAAR,CAAJ,CAAmB,WAAnB;AACAI,QAAAA,KAAK,CAACV,QAAN,GAAiBa,IAAjB;AAEA,eAAO,EACL,GAAGH;AADE,SAAP;AAGD;;AAED;AACE,aAAOA,KAAP;AAhBJ;AAkBD","sourcesContent":["import data from \"../Constants/data.json\"\n\nconst initialState = {\n  products: data,\n  cartList:[]\n};\n\n\nfunction checkCartItem(cartdata, selectedItem, productList){\n  let index = cartdata.findIndex(x=>x.id === selectedItem)\n  if(index > -1){\n\n  }\n}\n\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"ADD TO CART\": {\n      let list = JSON.parse(JSON.stringify(state.products))\n      console.log(action, list)\n      let updatedCart = checkCartItem(state.cartList, list[action.index].id, list)\n\n\n      list[action.index][\"quanitity\"]++\n      state.products = list\n\n      return {\n        ...state,\n      };\n    }\n    \n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}