{"ast":null,"code":"import data from \"../Constants/data.json\";\nconst initialState = {\n  products: data,\n  cartList: []\n};\n\nfunction getTotalAmt() {\n  return this.reduce((a, b) => a + (b[\"updatedRate\"] || 0), 0);\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"ADD TO CART\":\n      {\n        let list = JSON.parse(JSON.stringify(state.products));\n        list[action.index][\"quanitity\"]++;\n        let index = state.cartList.findIndex(x => x.id === list[action.index].id);\n\n        if (index > -1) {\n          let quanitity = state.cartList[index][\"quanitity\"];\n          quanitity++;\n          state.cartList[index][\"quanitity\"] = quanitity;\n          state.cartList[index][\"updatedRate\"] = quanitity * state.cartList[index][\"rate\"];\n        } else {\n          state.cartList.push(list[action.index]);\n        }\n\n        state.products = list;\n        var total = state.cartList.reduce((accum, item) => accum + item.updatedRate, 0);\n        console.log(total, quanitity, \"******** TOTAL *****\");\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ios11/Desktop/untitled folder/my-demo/src/Redux/reducer.js"],"names":["data","initialState","products","cartList","getTotalAmt","reduce","a","b","state","action","type","list","JSON","parse","stringify","index","findIndex","x","id","quanitity","push","total","accum","item","updatedRate","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEF,IADS;AAEnBG,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAMA,SAASC,WAAT,GAAsB;AACpB,SAAO,KAAKC,MAAL,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,IAAIC,CAAC,CAAC,aAAD,CAAD,IAAoB,CAAxB,CAAvB,EAAmD,CAAnD,CAAP;AACD;;AAGD,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAK,CAACN,QAArB,CAAX,CAAX;AACAS,QAAAA,IAAI,CAACF,MAAM,CAACM,KAAR,CAAJ,CAAmB,WAAnB;AACA,YAAIA,KAAK,GAAGP,KAAK,CAACL,QAAN,CAAea,SAAf,CAAyBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASP,IAAI,CAACF,MAAM,CAACM,KAAR,CAAJ,CAAmBG,EAA1D,CAAZ;;AACA,YAAIH,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,cAAII,SAAS,GAAGX,KAAK,CAACL,QAAN,CAAeY,KAAf,EAAsB,WAAtB,CAAhB;AACAI,UAAAA,SAAS;AACTX,UAAAA,KAAK,CAACL,QAAN,CAAeY,KAAf,EAAsB,WAAtB,IAAqCI,SAArC;AACAX,UAAAA,KAAK,CAACL,QAAN,CAAeY,KAAf,EAAsB,aAAtB,IAAwCI,SAAS,GAAGX,KAAK,CAACL,QAAN,CAAeY,KAAf,EAAsB,MAAtB,CAApD;AACD,SALD,MAKO;AACLP,UAAAA,KAAK,CAACL,QAAN,CAAeiB,IAAf,CAAoBT,IAAI,CAACF,MAAM,CAACM,KAAR,CAAxB;AACD;;AACDP,QAAAA,KAAK,CAACN,QAAN,GAAiBS,IAAjB;AACA,YAAIU,KAAK,GAAGb,KAAK,CAACL,QAAN,CAAeE,MAAf,CAAsB,CAACiB,KAAD,EAAOC,IAAP,KAAgBD,KAAK,GAAGC,IAAI,CAACC,WAAnD,EAAgE,CAAhE,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkBF,SAAlB,EAA6B,sBAA7B;AACA,eAAO,EACL,GAAGX;AADE,SAAP;AAGD;;AAED;AACE,aAAOA,KAAP;AAtBJ;AAwBD","sourcesContent":["import data from \"../Constants/data.json\"\n\nconst initialState = {\n  products: data,\n  cartList: []\n};\n\n\nfunction getTotalAmt(){\n  return this.reduce((a, b) => a + (b[\"updatedRate\"] || 0), 0);\n}\n\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"ADD TO CART\": {\n      let list = JSON.parse(JSON.stringify(state.products))\n      list[action.index][\"quanitity\"]++\n      let index = state.cartList.findIndex(x => x.id === list[action.index].id)\n      if (index > -1) {\n        let quanitity = state.cartList[index][\"quanitity\"]\n        quanitity++\n        state.cartList[index][\"quanitity\"] = quanitity\n        state.cartList[index][\"updatedRate\"] = (quanitity * state.cartList[index][\"rate\"])\n      } else {\n        state.cartList.push(list[action.index])\n      }\n      state.products = list\n      var total = state.cartList.reduce((accum,item) => accum + item.updatedRate, 0)\n      console.log(total,quanitity, \"******** TOTAL *****\")\n      return {\n        ...state,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}